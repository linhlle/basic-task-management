{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\TaskManagementApp\\\\frontend\\\\src\\\\components\\\\CreateNewTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './format/CreateNewTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNewTask = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    assignedTo: [],\n    dueDate: '',\n    priority: 'Medium'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [token, setToken] = useState(''); // State to store token\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    const tokenFromStorage = localStorage.getItem('token'); // Retrieve token from localStorage\n    setToken(tokenFromStorage); // Set token state\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/user/profile`, {\n        headers: {\n          'x-access-token': `${tokenFromStorage}`\n        } // Use token for authorization\n      });\n      setFormData({\n        ...formData,\n        newUsername: response.data.username || '',\n        // Update form data with profile data\n        newEmail: response.data.email || '',\n        newPassword: ''\n      });\n    } catch (error) {\n      console.error(error);\n      setError('Error. Please log in again.');\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleAssigneeSelect = user => {\n    if (!assignedTo.find(u => u._id === user._id)) {\n      setFormData({\n        ...formData,\n        assignedTo: [...assignedTo, user]\n      });\n    }\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n  const handleRemoveAssignee = userToRemove => {\n    const updatedAssignedTo = assignedTo.filter(user => user._id !== userToRemove._id);\n    setFormData({\n      ...formData,\n      assignedTo: updatedAssignedTo\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Form Data:', formData); // Log form data\n      const res = await axios.post('http://localhost:5000/api/task/createTask', formData, {\n        headers: {\n          'x-access-token': `${token}`\n        } // Use token for authorization\n      });\n      console.log('Response Data:', res.data); // Log response data\n\n      setFormData({\n        title: '',\n        description: '',\n        assignedTo: [],\n        dueDate: '',\n        priority: 'Medium'\n      });\n      // Here you can handle any UI updates or notifications for successful task creation\n    } catch (error) {\n      console.error(error.response.data);\n      // Here you can handle error messages or display notifications for failed task creation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"task-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNewTask, \"fSzGAD/QnXjFzhTWVJJmvnC8JpA=\");\n_c = CreateNewTask;\nexport default CreateNewTask;\nvar _c;\n$RefreshReg$(_c, \"CreateNewTask\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateNewTask","_s","formData","setFormData","title","description","assignedTo","dueDate","priority","searchTerm","setSearchTerm","searchResults","setSearchResults","token","setToken","error","setError","fetchUserData","tokenFromStorage","localStorage","getItem","response","get","headers","newUsername","data","username","newEmail","email","newPassword","console","handleChange","e","target","name","value","handleSearchChange","handleAssigneeSelect","user","find","u","_id","handleRemoveAssignee","userToRemove","updatedAssignedTo","filter","handleSubmit","preventDefault","log","res","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Asus/TaskManagementApp/frontend/src/components/CreateNewTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './format/CreateNewTask.css';\r\n\r\nconst CreateNewTask = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    assignedTo: [],\r\n    dueDate: '',\r\n    priority: 'Medium'\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [token, setToken] = useState(''); // State to store token\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    const tokenFromStorage = localStorage.getItem('token'); // Retrieve token from localStorage\r\n    setToken(tokenFromStorage); // Set token state\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/user/profile`, {\r\n        headers: { 'x-access-token': `${tokenFromStorage}` } // Use token for authorization\r\n      });\r\n\r\n      setFormData({\r\n        ...formData,\r\n        newUsername: response.data.username || '', // Update form data with profile data\r\n        newEmail: response.data.email || '',\r\n        newPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('Error. Please log in again.');\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSearchChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleAssigneeSelect = user => {\r\n    if (!assignedTo.find(u => u._id === user._id)) {\r\n      setFormData({ ...formData, assignedTo: [...assignedTo, user] });\r\n    }\r\n    setSearchTerm('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  const handleRemoveAssignee = userToRemove => {\r\n    const updatedAssignedTo = assignedTo.filter(user => user._id !== userToRemove._id);\r\n    setFormData({ ...formData, assignedTo: updatedAssignedTo });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log('Form Data:', formData); // Log form data\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/task/createTask',\r\n        formData,\r\n        {\r\n          headers: { 'x-access-token': `${token}` } // Use token for authorization\r\n        }\r\n      );\r\n      console.log('Response Data:', res.data); // Log response data\r\n\r\n      setFormData({\r\n        title: '',\r\n        description: '',\r\n        assignedTo: [],\r\n        dueDate: '',\r\n        priority: 'Medium'\r\n      });\r\n      // Here you can handle any UI updates or notifications for successful task creation\r\n    } catch (error) {\r\n      console.error(error.response.data);\r\n      // Here you can handle error messages or display notifications for failed task creation\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form-container\">\r\n      <h2>Create New Task</h2>\r\n      <form onSubmit={handleSubmit} className=\"task-form\">\r\n        {/* Form inputs */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNewTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}